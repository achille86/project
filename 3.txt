/**
	 * Returns the user code, if found
	 * 
	 * @return
	 */
	public static String getUserCode() {
		
		String user = "";
		
		IPreServiceFacade servicePre = null;
		it.usi.xframe.pre.bfutil.UserData preUserInfo = null;
		try {
			servicePre = PreServiceFactory.getInstance().getPreServiceFacade();
			preUserInfo = servicePre.retrieveUserInfo("GEC");
	
			logger.debug("[GecWebUtilities - getUserCode] getCodOperatore(): " + preUserInfo.getCodOperatore());
			logger.debug("[GecWebUtilities - getUserCode] getDescrizione(): " + preUserInfo.getDescrizione());
			logger.debug("[GecWebUtilities - getUserCode] getForo(): " + preUserInfo.getForo());
			user = preUserInfo.getCodOperatore();
		} catch(Exception ex) {
			logger.debug("[GecWebUtilities - getUserCode] Error while retrieving user information - PreServiceFactory.retrieveUserInfo()");
		}
		logger.debug("[GecWebUtilities - getUserCode] user: " + user);
		return user;
	}

/**
	 * Metodo Utilizzato per recuperare i dati dell'utente
	 * @author EE06077
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	public static UserData getUserData(HttpServletRequest request) throws Exception {

		UserData userData = (UserData) MarkedSessionManager.getInstance().getMarkedSessionAttribute(request, "userData"); 
		if (userData == null) {
			try {
				userData = IfgServiceFactory.getInstance().getIfgServiceFacade().getUserInfo();
				// genera sessionData e la marca in sessione
				MarkedSessionManager.getInstance().setMarkedSessionAttribute(request, "userData", userData);
			} catch (Exception e) {
				throw e;
			}
		}
		return userData;
	}